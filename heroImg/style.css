*, *::before, *::after {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: 'Roboto', sans-serif;
    font-size: 1.3rem;
}

h1 {
    font-size: 3rem;
}

img {
    /* this makes sure our image never gets smaller, however always shrinks within its flex div */
    max-width: 100%;
}

.container {
    width: 80%;
    max-width: 1100px;
    margin: 0 auto;
}

.row {
    display: flex;

    /* we can choose in which way the items will be spread out, this way we can space out the row */
    justify-content: space-between;

}

.col {
    width: 100%;
}

.col + .col {
    /* margin-left: 30px; */
}



.hero {
    padding: 100px 0;
    background-color: #23424A;
    color: #FFF;
}

.hero__text {
    /* if we remove width the text will spread and the img will decrease as flex items try to decrease to smallest possible size */
    width: 60%;

}

.hero__img {
    /* prevents image from spreading out like a div, use this when the img is not wrapped within a div */
    /* if we use this setting as a div, we loose responsivity as our image wont be a flexitem anymore */
    align-self: flex-start;

    /* /* if we set this to 100% of width, and the other too, they will try to fill the whole space, but because they will try to squish they will split the row */
    width: 30%;
}


.hero p {
    margin-bottom: 3em;
}

.btn {
    display: inline-block;
    text-decoration: none;
    text-transform: uppercase;
    color: #23424A;
    font-weight: 900;
    background-color: #38CFD9;
    padding: .75em 2em;
    border-radius: 100px;
}

.btn:hover,
.btn:focus {
    opacity: .75; 
}